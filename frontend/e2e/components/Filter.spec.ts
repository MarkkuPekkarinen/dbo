// Generated by CodiumAI
import { expect, test } from '@playwright/test';

test.beforeEach(async ({ page }, testInfo) => {
  await page.goto('/');
  await page.getByText('Add Tab').click();
  await page.locator('.toggle-filters').click();
});

test.describe('Filters', () => {
  test('should render the component without crashing', async ({ page }) => {
    const filtersComponent = await page.locator('#filters');
    expect(filtersComponent).not.toBeNull();
  });

  test('should display an "Add Filter" button when there are no filters', async ({ page }) => {
    const addFilterButton = await page.locator('.add-filter-btn');
    expect(addFilterButton).toBeVisible();
  });

  test('should add filter when click on add filter button', async ({ page }) => {
    await page.locator('.add-filter-btn').click();

    const filterItems = await page.locator('.filter-item');
    const filterItemsCount = (await filterItems.all()).length;
    expect(filterItems).toBeVisible();

    await page.locator('.add-filter-btn').click();
    const newFilterItems = await page.locator('.filter-item');

    expect((await newFilterItems.all()).length).toBe(filterItemsCount + 1);
  });

  test('should remove filter when click on remove filter button', async ({ page }) => {
    await page.locator('.add-filter-btn').last().click();
    await page.locator('.add-filter-btn').last().click();

    await page.locator('.remove-filter-btn').last().click();
    const filterItems = await page.locator('.filter-item');

    expect((await filterItems.all()).length).toBe(1);
  });

  test('should remove filter items container when remove last filter item', async ({ page }) => {
    await page.locator('.add-filter-btn').last().click();

    await page.locator('.remove-filter-btn').last().click();
    const filterItems = await page.locator('.filter-item');

    expect(filterItems).toBeHidden();
  });
});
